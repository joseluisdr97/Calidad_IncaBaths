{
  "version": "0.1",
  "toolInfo": {
    "toolName": "Microsoft (R) Visual C# Compiler",
    "productVersion": "1.0.0",
    "fileVersion": "1.0.0"
  },
  "issues": [
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\RouteConfig.cs",
              "region": {
                "startLine": 9,
                "startColumn": 17,
                "endLine": 9,
                "endColumn": 28
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1117",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\UnityConfig.cs",
              "region": {
                "startLine": 17,
                "startColumn": 18,
                "endLine": 17,
                "endColumn": 27
              }
            }
          ]
        }
      ],
      "shortMessage": "Rename 'container' which hides the field with the same name.",
      "fullMessage": "Shadowing fields with a local variable is a bad practice that reduces code readability: it makes it confusing to know whether the field or the variable is being used.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Local variables should not shadow class fields",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1117",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\FilterConfig.cs",
              "region": {
                "startLine": 5,
                "startColumn": 17,
                "endLine": 5,
                "endColumn": 29
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S125",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\UnityConfig.cs",
              "region": {
                "startLine": 42,
                "startColumn": 12,
                "endLine": 42,
                "endColumn": 45
              }
            }
          ]
        }
      ],
      "shortMessage": "Remove this commented out code.",
      "fullMessage": "Programmers should not comment out code as it bloats programs and reduces readability.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Sections of code should not be \"commented out\"",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-125",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1135",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\UnityConfig.cs",
              "region": {
                "startLine": 44,
                "startColumn": 15,
                "endLine": 44,
                "endColumn": 19
              }
            }
          ]
        }
      ],
      "shortMessage": "Complete the task associated to this 'TODO' comment.",
      "fullMessage": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Info",
        "title": "Track uses of \"TODO\" tags",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1135",
        "isEnabledByDefault": "False"
      }
    },
    {
      "ruleId": "S1135",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\UnityMvcActivator.cs",
              "region": {
                "startLine": 25,
                "startColumn": 15,
                "endLine": 25,
                "endColumn": 19
              }
            }
          ]
        }
      ],
      "shortMessage": "Complete the task associated to this 'TODO' comment.",
      "fullMessage": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Info",
        "title": "Track uses of \"TODO\" tags",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1135",
        "isEnabledByDefault": "False"
      }
    },
    {
      "ruleId": "S125",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\UnityMvcActivator.cs",
              "region": {
                "startLine": 26,
                "startColumn": 12,
                "endLine": 26,
                "endColumn": 135
              }
            }
          ]
        }
      ],
      "shortMessage": "Remove this commented out code.",
      "fullMessage": "Programmers should not comment out code as it bloats programs and reduces readability.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Sections of code should not be \"commented out\"",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-125",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 5,
                "startColumn": 17,
                "endLine": 5,
                "endColumn": 29
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 10,
                "startColumn": 41,
                "endLine": 10,
                "endColumn": 59
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 11,
                "startColumn": 24,
                "endLine": 11,
                "endColumn": 55
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 13,
                "startColumn": 41,
                "endLine": 13,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 14,
                "startColumn": 24,
                "endLine": 14,
                "endColumn": 52
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 18,
                "startColumn": 41,
                "endLine": 18,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 19,
                "startColumn": 24,
                "endLine": 19,
                "endColumn": 47
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 21,
                "startColumn": 41,
                "endLine": 21,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "C:\\Users\\JOSE LUIS\\Documents\\Visual Studio 2017\\Projects\\IncaBaths-master\\PROYECTO_INCABATHS\\App_Start\\BundleConfig.cs",
              "region": {
                "startLine": 25,
                "startColumn": 40,
                "endLine": 25,
                "endColumn": 55
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    }
  ]
}